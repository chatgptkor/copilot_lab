[Copilot Chat]

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const convert = () => {
  const imagesPath = path.resolve(__dirname, 'images');
  try {
    const files = fs.readdirSync(imagesPath);
    return files.filter((file) => file.toLowerCase().endsWith('.jpg'));
  } catch (err) {
    return [];
  }
};

console.log(convert());


[Comment based Copilot - Javascript]
//Create a function that reads image file in the jpg format from the 'images' folder and returns a list of the image file names.
//Image file extensions are not case sensitive.
//Use the ES module scope
<! -- GH copilot -->
//Use the 'fs' module to read the files in the 'images' folder
//Use the 'path' module to get the file extension
//Use the 'readdirSync' method to read the files in the 'images' folder
//Use the 'filter' method to filter the files with a jpg extension
//Use the 'map' method to return the file names
//Export the function as default
//The function should be named 'convert' 

import fs from 'fs';
import path from 'path';


const convert = () => {
    const files = fs.readdirSync('images');
    return files.filter(file => path.extname(file).toLowerCase() === '.jpg').map(file => file);
    };

export default convert;

//print the output
console.log(convert());


[Comment based Copilot - Python]
#Create a function that reads image file in the jpg format from the 'images' folder and returns a list of the image file names.
#Image file extensions are not case sensitive.

import os

def read_images():
    images_files = []
    for file in os.listdir('images'):
        if file.lower().endswith('.jpg'):
            images_files.append(file)
    return images_files  

print(read_images())
# Output: ['image1.jpg', 'image2.JPG', 'image3.Jpg', 'image4.jpg', 'image5.JPG']